et exrc
set nocompatible
set mouse=a
set number relativenumber
set cc=80
" Remove trailing whitespace
function! Trimwhitespace()
    let l:save = winsaveview()
    keeppatterns %s/\s\+$//e
    call winrestview(l:save)
endfunction

highlight ExtraWhitespace ctermbg=red guibg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

autocmd BufWritePre * :call Trimwhitespace()

""" Keybindings
" Indentation fix
map <F7> mzgg=G`z

" Plugins
map ; :Files<CR>
map <C-o> :NERDTreeToggle<CR>

""" Vim-Plug
call plug#begin()

" Vim-airline
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
" NerdTree
Plug 'https://github.com/scrooloose/nerdtree.git'
" NerdCommenter
Plug 'scrooloose/nerdcommenter'
" CSS-color
Plug 'https://github.com/ap/vim-css-color'
" Fzf
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'https://github.com/junegunn/fzf.vim'
" Surround
Plug 'https://github.com/tpope/vim-surround'
" EditorConfig
Plug 'https://github.com/editorconfig/editorconfig-vim'
" Syntastic
Plug 'vim-syntastic/syntastic'
" javacomplete
Plug 'vim-scripts/javacomplete'
" youcompleteme
" Plug 'valloric/youcompleteme'
" Asyncrun
Plug 'https://github.com/skywind3000/asyncrun.vim'
" Latex
Plug 'lervag/vimtex'
" Markdown
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'
Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() } }

" Monokai theme
Plug 'https://github.com/sickill/vim-monokai'
" Gruvbox theme
Plug 'https://github.com/morhetz/gruvbox'

call plug#end()

" Code needs
set ts=4 sw=4 smarttab et ci ai
set hlsearch
set encoding=utf-8
filetype plugin on
syntax on

" Term colors and themes
if $TERM == "xterm-256color"
    set t_Co=256
endif

let g:gruvbox_italic=1
colorscheme gruvbox
set background=dark

" Vim airline config
let g:airline_powerline_fonts = 0

" Mardown preview
let g:mkdp_auto_start = 1
let g:mkdp_auto_close = 1
let g:mkdp_refresh_slow = 0

" You complete me
let g:ycm_global_ycm_extra_conf = '~/.vim/.ycm_extra_conf.py'

" Syntastic
let g:syntastic_c_compiler = 'gcc'
let g:syntastic_c_compiler_options = '-Wall -Wextra -Werror -std=c99 -pedantic'

set secure
